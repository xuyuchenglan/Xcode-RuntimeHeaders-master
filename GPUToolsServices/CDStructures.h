/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned long long _field4;
    struct Argument _field5;
    struct Argument _field6[16];
    unsigned int _field7;
    unsigned int _field8;
    void *_field9;
    void *_field10;
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct ObjectTrackingMap<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct PassthroughBase {
    struct function<void *(const char *, unsigned long *)> LoadURLData;
};

struct StateMirrorManager<GPUTools::AnalyzerBaseObjectTypes> {
    struct unordered_map<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>>> _contextStateMirrorMap;
    struct unordered_map<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>>> _sharegroupStateMirrorMap;
    struct ObjectTrackingMap<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>, unsigned long long> _drawableInfoMap;
    struct PassthroughBase _passthrough;
    unsigned long long _surfaceBoundsDrawableID;
    int _deviceOrientation;
    int _lastFunctionIndex;
};

struct Stream {
    struct VMBuffer *_field1;
    union {
        void *_field1;
        struct *_field2;
    } _field2;
    void *_field3;
    unsigned long long _field4;
    struct __CFString *_field5;
    id _field6;
    void _field7;
    id _field8;
    void _field9;
    int _field10;
    _Bool _field11;
};

struct VMBuffer;

struct _CSTypeRef {
    unsigned long long _opaque_1;
    unsigned long long _opaque_2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>;

struct __hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>;

struct __hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>;

struct __hash_node<std::__1::pair<unsigned long long, int>, void *>;

struct __hash_node<unsigned long long, void *>;

struct dy_timebase {
    struct mach_timebase_info mach_timebase;
    unsigned long long nanoseconds_since_epoch_timestamp;
    unsigned long long mach_timestamp;
};

struct function<void *(const char *, unsigned long *)> {
    struct type __buf_;
    struct __base<void *(const char *, unsigned long *)> *__f_;
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned long long, int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
        struct __hash_node<unsigned long long, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::pair<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::shared_ptr<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, DYDevice *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, DYDevice *>>> {
    struct __hash_table<std::__1::pair<unsigned long long, DYDevice *>, std::__1::__unordered_map_hasher<unsigned long long, DYDevice *, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, DYDevice *, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::pair<unsigned long long, DYDevice *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned long long, DYDevice *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, DYDevice *, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, DYDevice *, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>>> {
    struct __hash_table<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, std::__1::__unordered_map_hasher<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>>> {
    struct __hash_table<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, std::__1::__unordered_map_hasher<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> {
    struct __hash_table<std::__1::pair<unsigned long long, int>, std::__1::__unordered_map_hasher<unsigned long long, int, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, int, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::pair<unsigned long long, int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long long, int>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned long long, int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, int, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, int, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *>*> {
                struct __hash_node<unsigned long long, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<unsigned long long>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<GPUTools::FD::Function, std::__1::allocator<GPUTools::FD::Function>> {
    struct Function *__begin_;
    struct Function *__end_;
    struct __compressed_pair<GPUTools::FD::Function *, std::__1::allocator<GPUTools::FD::Function>> {
        struct Function *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
} CDStruct_bd2f613f;

typedef struct {
    unsigned int bytes;
    unsigned int messages;
    unsigned int buffers;
    unsigned int aliases;
    unsigned long long standbyTimestamp;
    unsigned long long capturingTimestamp;
    unsigned long long processingTimestamp;
    unsigned long long invalidTimestamp;
    unsigned long long duration;
} CDStruct_faeedbfb;

typedef struct {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} CDStruct_fc1d2ed0;

// Template types
typedef struct StateMirrorManager<GPUTools::AnalyzerBaseObjectTypes> {
    struct unordered_map<unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>>> _contextStateMirrorMap;
    struct unordered_map<unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>*>>> _sharegroupStateMirrorMap;
    struct ObjectTrackingMap<GPUTools::SM::DrawableInfo<GPUTools::AnalyzerBaseObjectTypes>, unsigned long long> _drawableInfoMap;
    struct PassthroughBase _passthrough;
    unsigned long long _surfaceBoundsDrawableID;
    int _deviceOrientation;
    int _lastFunctionIndex;
} StateMirrorManager_6a358214;

typedef struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *>*> {
                struct __hash_node<unsigned long long, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<unsigned long long>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_set_6cd805f9;

