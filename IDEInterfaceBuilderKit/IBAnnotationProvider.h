/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "DVTAnnotationProvider.h"

#import "DVTTextAnnotationDelegate-Protocol.h"
#import "NSMenuDelegate-Protocol.h"

@class DVTObservingToken, DVTTextStorage, IBAnnotationDataCache, IBCancellationToken, IBIndexClassProvider, IDEAnnotationContext, NSPopUpButtonCell;

@interface IBAnnotationProvider : DVTAnnotationProvider <DVTTextAnnotationDelegate, NSMenuDelegate>
{
    IDEAnnotationContext *annotationContext;
    DVTTextStorage *textStorage;
    NSPopUpButtonCell *annotationPopUpCell;
    IBIndexClassProvider *indexClassProvider;
    IBAnnotationDataCache *annotationDataCache;
    BOOL shouldReparseSourceModelImmediately;
    BOOL annotationsShouldBeInteractive;
    struct dispatch_queue_s *indexQueryQueue;
    unsigned int indexQueryBlockGeneration;
    DVTObservingToken *kvoAssociatedWorkspaceIndexToken;
    id sourceCodeDocumentDidChangeToken;
    id indexDidChangeNotificationToken;
    id ibDidAddConnectionToken;
    id ibDidRemoveConnectionToken;
    IBCancellationToken *targetIdentifierCancellationToken;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
+ (void)initialize;
- (void).cxx_destruct;
- (void)annotation:(id)arg1 willDrawInTextSidebarView:(id)arg2 withAnnotationsInSameLine:(id)arg3;
- (BOOL)annotation:(id)arg1 shouldDrawInTextSidebarView:(id)arg2 withAnnotationsInSameLine:(id)arg3;
- (void)didDeleteOrReplaceParagraphForAnnotation:(id)arg1;
- (void)didEndRolloverOnAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (void)didBeginRolloverOnAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (void)didDragAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (void)didClickAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (BOOL)shouldPermitConnectingFromAnnotation;
- (void)handleSingleClickOnAnnotation:(id)arg1 inTextSidebarView:(id)arg2;
- (id)referencingLocationsSortedForDisplayInPopUp:(id)arg1;
- (id)menuItemAttributedStringForConnectionAtLocation:(id)arg1;
- (void)annotationPopUpAction:(id)arg1;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (void)highlightIBObjectsAssociatedWithAnnotation:(id)arg1;
- (void)highlightDestinationObjectInAllOpenEditorsForConnectionAtLocation:(id)arg1;
- (void)stopHighlightingAssociatedIBObjects;
- (void)revealDestinationObjectForConnectionAtLocation:(id)arg1;
- (id)destinationObjectLocationForConnection:(id)arg1 fromDocument:(id)arg2;
- (void)rebuildAnnotationsUsingDataCache;
- (id)rebuiltAnnotationFromCachedAnnotation:(id)arg1;
- (void)rebuildAnnotationsUsingIndex;
- (void)updateExistingAnnotationsUsingOpenIBDocuments;
- (id)existingAnnotationsForConnection:(id)arg1;
- (id)existingAnnotationsIgnoringSourceModelContextWithName:(id)arg1 inClassNamed:(id)arg2;
- (id)existingAnnotationNamed:(id)arg1 inClassNamed:(id)arg2 matchingSourceModelContext:(unsigned long long)arg3 inSet:(id)arg4;
- (void)removeAnnotation:(id)arg1;
- (void)stopObservingIBDocumentConnectionChanges;
- (void)startObservingIBDocumentConnectionChanges;
- (void)handleChangeInConnectionStateForConnection:(id)arg1 isConnected:(BOOL)arg2;
- (id)connectionLocationForConnection:(id)arg1;
- (void)stopObservingSourceCodeDocumentChanges;
- (void)startObservingSourceCodeDocumentChanges;
- (void)handleChangeInSourceCodeDocument:(id)arg1;
- (void)updateAnnotations;
- (void)hideAnnotationsIfInsufficientData;
- (id)sourceModelInfoForAnnotationInSourceModel:(id)arg1;
- (void)createOrModifyAnnotationUsingSourceModelItemInfo:(id)arg1 inClassNamed:(id)arg2;
- (id)document;
- (id)classNamesInSourceModel;
- (void)startObservingIndex;
- (void)stopObservingIndex;
- (id)index;
- (void)cacheAnnotations;
- (void)providerWillUninstall;
- (id)initWithContext:(id)arg1;

@end

