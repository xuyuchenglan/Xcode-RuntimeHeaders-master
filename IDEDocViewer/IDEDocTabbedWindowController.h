/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSWindowController.h"

#import "DVTStateRepositoryDelegate-Protocol.h"
#import "DVTStatefulObject-Protocol.h"
#import "DVTTabbedWindowControlling-Protocol.h"
#import "IDEDocSearchField_FieldEditorProtocol-Protocol.h"
#import "IDEDocTabbedWindowControllerProtocol-Protocol.h"
#import "IDEEditorMenuContentProvider-Protocol.h"
#import "NSTextFieldDelegate-Protocol.h"
#import "NSToolbarDelegate-Protocol.h"
#import "NSWindowDelegate-Protocol.h"

@class DVTDelayedInvocation, DVTObservingToken, DVTSegmentedControl, DVTStateRepository, DVTStateToken, DVTTabBarEnclosureView, DVTTabBarView, DVTTabSwitcher, IDEDocDocumentationTabViewController, IDEDocSearchController, IDEDocSearchResultsController, IDEDocToolbar, IDEDocToolbarItem, IDEDocWebHistoryMenu, NSArray, NSMapTable, NSMenu, NSMutableArray, NSSegmentedControl, NSString, NSTextField, NSToolbarItem, NSURL, NSView;

@interface IDEDocTabbedWindowController : NSWindowController <DVTTabbedWindowControlling, NSTextFieldDelegate, NSWindowDelegate, IDEDocSearchField_FieldEditorProtocol, DVTStatefulObject, DVTStateRepositoryDelegate, NSToolbarDelegate, IDEDocTabbedWindowControllerProtocol, IDEEditorMenuContentProvider>
{
    DVTObservingToken *_activeTabViewControllerObservingToken;
    DVTObservingToken *_tabLabelWatcher;
    DVTObservingToken *_inactiveTabLabelWatcher;
    DVTObservingToken *_sidebarVisibleWatcher;
    DVTObservingToken *_tableOfContentsVisibleWatcher;
    DVTObservingToken *_firstResponderWatcher;
    IDEDocSearchResultsController *_toolbarSearchResultsController;
    id _searchFieldEditor;
    NSMutableArray *_stateChangeObservingTokens;
    NSMenu *_viewToolbarItemMenu;
    NSURL *_pdfURL;
    NSToolbarItem *_searchToolbarItem;
    IDEDocToolbarItem *_backForwardToolbarItem;
    id _webViewProgressFinishedWatcher;
    NSMapTable *_restoredTabsWebViewProgressWatchers;
    IDEDocSearchController *_searchResultsPageSearchController;
    IDEDocWebHistoryMenu *_webBackHistoryMenu;
    IDEDocWebHistoryMenu *_webForwardHistoryMenu;
    id _windowDidOrderOffWatcher;
    id _windowDidResignWatcher;
    DVTSegmentedControl *_toolbar_tableOfContentsSegControl;
    NSToolbarItem *_toolbarItem_tableOfContents;
    BOOL _showToolbar;
    BOOL _enteringFullScreenMode;
    BOOL _exitingFullScreenMode;
    BOOL _fullScreenTabBarAlwaysVisible;
    BOOL _keepTabBarHiddenWhenCreatingTab;
    BOOL _readyToUpdateKeyboardLoop;
    BOOL _canOpenPDF;
    BOOL _createNewTabUponLoadIfNoTabsExist;
    IDEDocDocumentationTabViewController *_activeDocumentationTabController;
    DVTTabSwitcher *_tabSwitcher;
    DVTTabBarEnclosureView *_tabBarEnclosureView;
    DVTTabBarView *_tabBarView;
    IDEDocToolbar *_toolbar;
    NSTextField *_toolbarSearchTextField;
    NSView *_toolbar_searchFieldContainerView;
    NSSegmentedControl *_toolbar_backForward;
    DVTSegmentedControl *_toolbar_shareSegmentedControl;
    NSToolbarItem *_toolbar_ShareItem;
    NSArray *_topLevelViewOrder;
    NSMapTable *_viewHeightsForResizing;
    DVTStateToken *_stateToken;
    DVTDelayedInvocation *_stateSavingInvocation;
    DVTStateRepository *_stateRepository;
    NSString *_currentSearchString;
    DVTSegmentedControl *_toolbarSidebarsSegmentedControl;
    struct CGRect _windowFrameBeforeFullScreen;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property __weak DVTSegmentedControl *toolbarSidebarsSegmentedControl; // @synthesize toolbarSidebarsSegmentedControl=_toolbarSidebarsSegmentedControl;
@property(copy) NSString *currentSearchString; // @synthesize currentSearchString=_currentSearchString;
@property(retain) DVTStateRepository *stateRepository; // @synthesize stateRepository=_stateRepository;
@property(retain) DVTDelayedInvocation *stateSavingInvocation; // @synthesize stateSavingInvocation=_stateSavingInvocation;
@property(retain) DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property BOOL createNewTabUponLoadIfNoTabsExist; // @synthesize createNewTabUponLoadIfNoTabsExist=_createNewTabUponLoadIfNoTabsExist;
@property BOOL canOpenPDF; // @synthesize canOpenPDF=_canOpenPDF;
@property(copy) NSMapTable *viewHeightsForResizing; // @synthesize viewHeightsForResizing=_viewHeightsForResizing;
@property(copy) NSArray *topLevelViewOrder; // @synthesize topLevelViewOrder=_topLevelViewOrder;
@property struct CGRect windowFrameBeforeFullScreen; // @synthesize windowFrameBeforeFullScreen=_windowFrameBeforeFullScreen;
@property BOOL readyToUpdateKeyboardLoop; // @synthesize readyToUpdateKeyboardLoop=_readyToUpdateKeyboardLoop;
@property BOOL keepTabBarHiddenWhenCreatingTab; // @synthesize keepTabBarHiddenWhenCreatingTab=_keepTabBarHiddenWhenCreatingTab;
@property BOOL fullScreenTabBarAlwaysVisible; // @synthesize fullScreenTabBarAlwaysVisible=_fullScreenTabBarAlwaysVisible;
@property BOOL exitingFullScreenMode; // @synthesize exitingFullScreenMode=_exitingFullScreenMode;
@property BOOL enteringFullScreenMode; // @synthesize enteringFullScreenMode=_enteringFullScreenMode;
@property(nonatomic) BOOL showToolbar; // @synthesize showToolbar=_showToolbar;
@property __weak NSToolbarItem *toolbar_ShareItem; // @synthesize toolbar_ShareItem=_toolbar_ShareItem;
@property DVTSegmentedControl *toolbar_shareSegmentedControl; // @synthesize toolbar_shareSegmentedControl=_toolbar_shareSegmentedControl;
@property NSSegmentedControl *toolbar_backForward; // @synthesize toolbar_backForward=_toolbar_backForward;
@property NSView *toolbar_searchFieldContainerView; // @synthesize toolbar_searchFieldContainerView=_toolbar_searchFieldContainerView;
@property NSTextField *toolbarSearchTextField; // @synthesize toolbarSearchTextField=_toolbarSearchTextField;
@property IDEDocToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property DVTTabBarView *tabBarView; // @synthesize tabBarView=_tabBarView;
@property DVTTabBarEnclosureView *tabBarEnclosureView; // @synthesize tabBarEnclosureView=_tabBarEnclosureView;
@property DVTTabSwitcher *tabSwitcher; // @synthesize tabSwitcher=_tabSwitcher;
@property(retain) IDEDocDocumentationTabViewController *activeDocumentationTabController; // @synthesize activeDocumentationTabController=_activeDocumentationTabController;
- (void).cxx_destruct;
- (id)extensionForMenuContent;
- (void)toolbarWillAddItem:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (void)_shareSegmentStateDidChange:(id)arg1;
- (void)_backForwardSegmentStateDidChange:(id)arg1;
- (void)_sideBarsSegmentStateDidChange:(id)arg1;
- (id)PDFURLForCurrentDocument;
- (void)scrollWheel:(id)arg1;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)_jumpToCounterpartUp:(BOOL)arg1;
- (void)_swipeToGoForward:(BOOL)arg1;
- (id)_stateRepositoryFilePath;
- (BOOL)_loadStateData:(id *)arg1;
- (BOOL)_saveStateData:(id *)arg1;
- (void)stateRepositoryDidChange:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)_configureStateSavingObservers;
- (void)toolbarSearchField_FieldEditorDidComplete:(id)arg1;
- (void)toolbarSearchField_FieldEditorInsertTab:(id)arg1;
- (void)toolbarSearchField_FieldEditorInsertNewLine:(id)arg1;
- (void)toolbarSearchField_FieldEditorDidMoveUp:(id)arg1;
- (void)toolbarSearchField_FieldEditorDidMoveDown:(id)arg1;
- (void)endEditingFor:(id)arg1;
- (id)fieldEditorStringValue;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)showWindow:(id)arg1;
- (void)showWindow:(id)arg1 focusSearchField:(BOOL)arg2;
- (void)loadURL:(id)arg1;
- (void)loadURL:(id)arg1 inNewTab:(BOOL)arg2;
- (void)showContinuousIntegrationGuide;
- (void)showSourceControlGuide;
- (void)showGDBToLLDBTransitionGuide;
- (void)showWhatsNewInXcode;
- (void)showXcodeReleaseNotes;
- (void)showXcodeUserGuide;
- (void)showXcodeHelpGuides;
- (void)showXcodeHomePage;
- (void)goBackInHistoryByCommand:(id)arg1;
- (void)goForwardInHistoryByCommand:(id)arg1;
@property(readonly) NSString *selectedTextInWebView;
- (void)setSplitterPosition:(double)arg1;
@property(readonly) double splitterPosition;
@property(readonly) BOOL isSidebarVisible;
- (void)useSelectionForFind:(id)arg1;
- (void)focusSearchField:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (void)makeNewTab:(id)arg1;
@property(readonly) BOOL hasMultipleTabs;
- (void)selectNextTab:(id)arg1;
- (void)selectPreviousTab:(id)arg1;
- (void)find:(id)arg1;
- (void)hideFindBar:(id)arg1;
- (void)moveKeyboardFocusToNextArea:(id)arg1;
- (void)findInWorkspace:(id)arg1;
- (void)openQuicklyScoped:(id)arg1;
- (void)idedoc_revealInLibrary:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_updateCustomToolbarItems;
- (BOOL)URLRepresentsSearchResultsPage:(id)arg1;
- (void)shareButton_openPDF:(id)arg1;
- (void)shareButton_addBookmark:(id)arg1;
- (void)shareButton_emailURL:(id)arg1;
- (void)shareButton_messageURL:(id)arg1;
- (id)_shareURLForMailOrMessage;
- (id)_shareURLForBookmark;
- (void)shareButton_openInBrowser:(id)arg1;
- (void)updateToolbarState;
@property(readonly) BOOL canGoBack;
@property(readonly) BOOL canGoForward;
@property(readonly) BOOL canMakeTextStandardSize;
@property(readonly) BOOL canZoomOut;
@property(readonly) BOOL canZoomIn;
- (void)showLibrary:(id)arg1;
- (void)showBookmarks:(id)arg1;
- (void)documentation_toggleTableOfContents:(id)arg1;
- (void)documentation_toggleNavigator:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)toolbar_backForward:(id)arg1;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
- (void)selectHistoryItem:(id)arg1;
- (void)showFullResultsPageForHelpMenuSearchString:(id)arg1;
- (void)showFullResultsPageForSearchString:(id)arg1;
- (void)makeNewTabAndLoadURL:(id)arg1;
- (void)_configureActiveTabController:(id)arg1;
- (void)setWindowTitleFromTabViewController:(id)arg1;
- (void)clearSearchField;
- (void)executeSearchForString:(id)arg1;
- (void)closeResultsPanelAndClearSearchField;
- (void)controlTextDidChange:(id)arg1;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)_searchWithString:(id)arg1;
- (void)showAllResultsInContext:(id)arg1;
- (void)close;
- (void)windowDidLoad;
- (void)_updateToolbarIsVisible;
- (BOOL)_canToggleToolbar;
- (void)toggleToolbarShown:(id)arg1;
- (BOOL)isInFullScreenMode;
@property(readonly) BOOL moreThanOneTabShowing;
- (BOOL)closeKeyEquivalentClosesTab;
- (void)_closeWindowIfNoTabs;
- (void)_closeTabWithoutConfirming:(id)arg1 andInvalidate:(BOOL)arg2;
- (void)_closeTabWithoutConfirming:(id)arg1;
- (double)tabBarHeight;
- (void)_collectViewInfoForResizing;
- (double)_originalHeightForView:(id)arg1;
- (void)moveTabFromOtherWindow:(id)arg1 toIndex:(unsigned long long)arg2 andShow:(BOOL)arg3;
- (void)replaceEmptyTabWithTabs:(id)arg1;
- (void)_closeOtherTabsWithoutConfirming:(id)arg1;
- (void)closeOtherTabs:(id)arg1;
- (void)closeTabOrWindow:(id)arg1;
- (void)closeTab:(id)arg1;
- (void)_selectNextTabGoingForward:(BOOL)arg1;
- (void)moveTabToNewWindowFromMenu:(id)arg1;
- (void)closeOtherTabsFromMenu:(id)arg1;
- (void)closeCurrentTab:(id)arg1;
@property(readonly) BOOL canCloseSelectedTab;
- (BOOL)_canCloseTab:(id)arg1;
- (void)closeTabFromMenu:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (id)_findTabForView:(id)arg1;
- (void)selectTab:(id)arg1;
- (id)_showTab:(id)arg1;
- (id)_setUpTabForViewController:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_setUpTabForViewController:(id)arg1 addToRightSide:(BOOL)arg2;
- (id)_setUpTabForViewController:(id)arg1;
- (id)_createTabWithViewController:(id)arg1 atIndex:(unsigned long long)arg2 andShow:(BOOL)arg3;
- (id)createTabWithViewController:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (id)createInactiveTabWithFrameName:(id)arg1;
- (id)createInactiveTab;
- (id)createTabWithFrameName:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3 withUUID:(id)arg4;
- (id)createTabWithFrameName:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (id)createNewDocumentationTabViewControllerWithUUID:(id)arg1;
- (id)createTabWithFrameName:(id)arg1;
- (id)createTab;
- (id)createTabRespectingIDENewTabActivationPreference;
- (unsigned long long)selectedTabIndex;
- (id)selectedTab;
- (id)orderedTabViewItems;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1 isShowing:(BOOL)arg2 forceMaintainFullHeight:(BOOL)arg3;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1 isShowing:(BOOL)arg2;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1;
- (id)_screenForWindow;
- (id)_setAutoresizingMasksForOrderedViews:(id)arg1 toResizeOnly:(id)arg2;
- (void)_showTabBarIfNeeded;
- (void)setTabBarVisible:(BOOL)arg1;
- (BOOL)isTabBarVisible;
- (void)cancelUpdateTabTitlesSoon;
- (void)tabBarViewUpdateTabTitlesNow:(id)arg1;
- (void)tabBarViewUpdateTabTitlesSoon:(id)arg1;
- (struct CGRect)adjustedFrameForCascade:(struct CGRect)arg1 fromWindow:(id)arg2;
- (struct CGRect)adjustedFrameForSaving:(struct CGRect)arg1;
- (BOOL)canReceiveDragFromTabbedWindowControlling:(id)arg1;
- (BOOL)canCreateNewTab;
- (void)toggleTabBar:(id)arg1;
- (id)_newTabWithName:(id)arg1 andShow:(BOOL)arg2 withInstalledTabControllerBlock:(id)arg3;
- (id)newTabWithName:(id)arg1;
- (id)_uniqueNameForNewWorkspaceTabController;
- (void)newTab:(id)arg1;
- (void)_updateFullScreenAuxiliaryToolbarViewSizes;
@property(readonly) BOOL _shouldShowTabBar;
- (void)_setTabBarVisible:(BOOL)arg1;
- (BOOL)_alwaysShowTabBar;
- (void)_prepareBarsToExitFullScreen;
- (void)_prepareBarsToEnterFullScreen;
- (void)didExitFullScreenMode:(id)arg1;
- (void)willExitFullScreenMode:(id)arg1;
- (void)willEnterFullScreenMode:(id)arg1;
- (void)didEnterFullScreenMode:(id)arg1;
- (void)_removeFullScreenNotificationObservers;
- (void)_setupFullScreenNotifications;
- (BOOL)_windowIsFullHeight;
- (void)_setUpTabBar;

@end

