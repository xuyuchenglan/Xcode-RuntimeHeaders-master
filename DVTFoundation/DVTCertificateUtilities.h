/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@interface DVTCertificateUtilities : NSObject
{
}

+ (id)createCSRWithCommonName:(id)arg1 emailAddress:(id)arg2 andError:(id *)arg3;
+ (id)expirationDateForCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)issueDateForCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)_dateFromCertificate:(struct OpaqueSecCertificateRef *)arg1 forOID:(id)arg2;
+ (id)serialNumberForCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)_serialNumberFromCertificate:(struct OpaqueSecCertificateRef *)arg1 forOID:(id)arg2;
+ (id)platformIdentifierForCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)sha1HashForCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)commonNameForCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)defaultDesignatedRequirementsForIdentifier:(id)arg1 andCertificate:(struct OpaqueSecCertificateRef *)arg2;
+ (_Bool)isCertificateTrusted:(struct OpaqueSecCertificateRef *)arg1;
+ (id)certificateDataForCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (_Bool)hasCertificateExpired:(struct OpaqueSecCertificateRef *)arg1;
+ (_Bool)isCertificateAnIdentity:(struct OpaqueSecCertificateRef *)arg1;
+ (id)portalMemberIDFromCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)userIDFromCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)portalTeamNameFromCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)portalTeamIDFromCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)_valueInSubjectNameSectionFromCertificate:(struct OpaqueSecCertificateRef *)arg1 forOID:(id)arg2;
+ (id)trimmedNameForCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)allSigningCertificates;
+ (id)allSigningIdentityCertificates;
+ (id)allSigningCertificates_Sync;
+ (id)allSigningIdentityCertificates_Sync;
+ (id)allSigningIdentityCertificatesInKeychain_Sync:(struct OpaqueSecKeychainRef *)arg1;
+ (void)_scanForSigningCertificates;
+ (void)_scanForSigningIdentityCertificates;
+ (void)_setupKeychainCallback;
+ (struct dispatch_queue_s *)certificateScanQueue;
+ (struct dispatch_queue_s *)certificateLockQueue;
+ (_Bool)isCertificateKindRevocable:(id)arg1;
+ (id)displayNameForCertificateKind:(id)arg1;
+ (id)certificateKindForCertificate:(struct OpaqueSecCertificateRef *)arg1;

@end

