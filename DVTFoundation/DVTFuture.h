/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "DVTPromise-Protocol.h"

@class NSError;

@interface DVTFuture : NSObject <DVTPromise>
{
    // Error parsing type: {spin_mutex="l"{atomic<bool>="__a_"AB}}, name: _mtx
    struct mutex _cond_mtx;
    struct condition_variable _cond_var;
    int _state;
    long long _progress;
    NSError *_error;
    id _result;
    struct vector<void (^)(long, signed char *), std::__1::allocator<void (^)(long, signed char *)>> _progressBlocks;
    struct vector<void (^)(DVTFutureState, id, NSError *), std::__1::allocator<void (^)(DVTFutureState, id, NSError *)>> _finishBlocks;
    struct vector<void (^)(), std::__1::allocator<void (^)()>> _cancelledBlocks;
    struct vector<void (^)(NSError *), std::__1::allocator<void (^)(NSError *)>> _failedBlocks;
    struct vector<void (^)(id), std::__1::allocator<void (^)(id)>> _succeededBlocks;
    struct unordered_map<DVTFuture *, long, objc_pointer_hasher, std::__1::equal_to<DVTFuture *>, std::__1::allocator<std::__1::pair<DVTFuture *const, long>>> _linkedSubFutures;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)_description;
- (void)observeSuccess:(id)arg1;
- (void)observeFailure:(id)arg1;
- (void)observeCancellation:(id)arg1;
- (void)observeFinish:(id)arg1;
- (void)observeProgress:(id)arg1;
- (void)cancel;
- (int)waitUntilFinished;
- (id)result;
- (id)error;
- (id)initWithBlock:(id)arg1;
- (void)trackFuture:(id)arg1;
- (void)trackFuture:(id)arg1 progress:(float)arg2 cancel:(BOOL)arg3 result:(BOOL)arg4 error:(BOOL)arg5;
- (void)updateProgressFromReporters;
- (void)succeedWithResult:(id)arg1;
- (void)failWithError:(id)arg1;
- (void)setState:(int)arg1 result:(id)arg2 error:(id)arg3;
- (id)future;
- (void)setProgress:(long long)arg1;

@end

