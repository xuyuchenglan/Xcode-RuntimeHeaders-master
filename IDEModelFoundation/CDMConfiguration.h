/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "CDMIdentification-Protocol.h"
#import "DVTInvalidation-Protocol.h"
#import "IDEInspectorAccessibilitySupport-Protocol.h"

@class CDMModel, DVTStackBacktrace, NSMutableArray, NSNumber, NSString;

@interface CDMConfiguration : NSObject <IDEInspectorAccessibilitySupport, CDMIdentification, DVTInvalidation>
{
    NSNumber *_uniqueID;
    NSString *_name;
    NSMutableArray *_entities;
    CDMModel *_model;
}

+ (id)configurationFromPasteboradPlist:(id)arg1 model:(id)arg2;
+ (void)initialize;
@property(retain) CDMModel *model; // @synthesize model=_model;
@property(copy) NSMutableArray *entities; // @synthesize entities=_entities;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy) NSNumber *uniqueID; // @synthesize uniqueID=_uniqueID;
- (void).cxx_destruct;
- (id)stringRepresentationForTextIndex;
- (id)stringRepresentation;
- (id)xmlElementDescription;
- (id)xmlElementAttributes;
- (id)initWithXMLElementDescription:(id)arg1 belongingToModel:(id)arg2;
- (id)navigableItem_name;
- (id)pasteboardPlist;
- (void)cascadeChangesToLegacyConfiguration:(id)arg1 givenModernToLegacyEntityMapping:(id)arg2;
- (id)initWithLegacyConfiguration:(id)arg1 andEntityMapping:(id)arg2 belongingToModel:(id)arg3;
- (id)initWithEntities:(id)arg1 andName:(id)arg2 inModel:(id)arg3;
- (id)init;
- (void)_commonInitInModel:(id)arg1;
- (void)primitiveInvalidate;
- (void)updateConfigurationWithEntities:(id)arg1;
- (void)addEntities:(id)arg1;
- (void)removeEntities:(id)arg1;
- (void)removeEntity:(id)arg1;
- (void)addEntity:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)_registerUndoBlockForConfiguration:(id)arg1;
- (BOOL)validateName:(id *)arg1 error:(id *)arg2;
- (id)humanReadableNameForInspectorKeyPath:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

