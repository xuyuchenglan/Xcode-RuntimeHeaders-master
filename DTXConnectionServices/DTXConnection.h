/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "DTXConnectionRemoteReceiveQueueCalls-Protocol.h"
#import "DTXMessenger-Protocol.h"

@class DTXChannel, DTXMessageParser, DTXMessageTransmitter, DTXResourceTracker, DTXTransport, NSDictionary, NSMutableDictionary;

@interface DTXConnection : NSObject <DTXConnectionRemoteReceiveQueueCalls, DTXMessenger>
{
    struct dispatch_queue_s *_outgoing_message_queue;
    struct dispatch_queue_s *_outgoing_control_queue;
    DTXTransport *_controlTransport;
    struct dispatch_queue_s *_receive_queue;
    unsigned int _nextChannelCode;
    NSMutableDictionary *_channelsByCode;
    NSMutableDictionary *_handlersByIdentifier;
    NSMutableDictionary *_localCapabilities;
    NSDictionary *_remoteCapabilities;
    struct dispatch_queue_s *_handler_queue;
    DTXResourceTracker *_resourceTracker;
    DTXResourceTracker *_incomingResourceTracker;
    struct dispatch_semaphore_s *_firstMessageSem;
    DTXMessageParser *_incomingParser;
    DTXMessageTransmitter *_outgoingTransmitter;
    DTXChannel *_defaultChannel;
    BOOL _legacyMode;
    BOOL _routeMissingChannelToDefault;
    BOOL _tracer;
    BOOL _traceToSyslog;
    BOOL _remoteTracer;
    id _channelHandler;
}

+ (id)connectionPublishingAddress:(id)arg1;
+ (id)connectionToAddress:(id)arg1;
+ (void)registerTransport:(Class)arg1 forScheme:(id)arg2;
+ (void)initialize;
@property(readonly, nonatomic) DTXChannel *defaultChannel; // @synthesize defaultChannel=_defaultChannel;
@property(nonatomic) BOOL routeMissingChannelToDefault; // @synthesize routeMissingChannelToDefault=_routeMissingChannelToDefault;
@property(copy) id channelHandler; // @synthesize channelHandler=_channelHandler;
@property(nonatomic) BOOL remoteTracer; // @synthesize remoteTracer=_remoteTracer;
@property(nonatomic) BOOL traceToSyslog; // @synthesize traceToSyslog=_traceToSyslog;
@property(nonatomic) BOOL tracer; // @synthesize tracer=_tracer;
@property(nonatomic) BOOL legacyMode; // @synthesize legacyMode=_legacyMode;
- (void)_setTracerState:(unsigned int)arg1;
- (void)_channelCanceled:(unsigned int)arg1;
- (void)_notifyOfPublishedCapabilities:(id)arg1;
- (void)_requestChannelWithCode:(unsigned int)arg1 identifier:(id)arg2;
- (void)_unregisterChannel:(id)arg1;
- (id)makeChannelWithIdentifier:(id)arg1;
- (void)_scheduleMessage:(id)arg1 toChannel:(id)arg2;
- (void)_routeMessage:(id)arg1;
- (BOOL)_addHandler:(id)arg1 forMessage:(void)arg2 channel:(unsigned int)arg3;
- (BOOL)sendMessage:(id)arg1 fromChannel:(id)arg2 sendMode:(int)arg3 syncWithReply:(BOOL)arg4 replyHandler:(id)arg5;
- (void)sendMessageSync:(id)arg1 replyHandler:(id)arg2;
- (void)sendMessage:(id)arg1 replyHandler:(id)arg2;
- (BOOL)sendMessageAsync:(id)arg1 replyHandler:(id)arg2;
- (void)sendControlSync:(id)arg1 replyHandler:(id)arg2;
- (void)sendControlAsync:(id)arg1 replyHandler:(id)arg2;
- (void)cancel;
- (void)setDispatchTarget:(id)arg1;
- (void)setMessageHandler:(id)arg1;
- (void)resume;
- (void)suspend;
- (long long)remoteCapabilityVersion:(id)arg1;
- (void)publishCapability:(id)arg1 withVersion:(long long)arg2;
@property(nonatomic) unsigned long long maximumEnqueueSize;
- (void)dealloc;
- (id)initWithTransport:(id)arg1;
- (void)_setupWireProtocols;
- (id)initPublishingAddress:(id)arg1;
- (id)initWithAddress:(id)arg1;

@end

